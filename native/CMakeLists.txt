set(CMAKE_CXX_COMPILER_WORKS 1)

set(LITTLE_ENDIAN     True)
set(BIG_ENDIAN        False)

cmake_minimum_required(VERSION 3.16)

project(Sync LANGUAGES CXX)
set(CXX_STANDARD 11)

if(BUILD_WINDOWS)
	set(LIVE True)
	add_compile_definitions(WINDOWS)
	add_compile_definitions(_WIN32_WINNT=0x0601)
elseif(BUILD_RPI)
	set(BUILD_LINUX True)
	set(LIVE True)
	add_compile_definitions(RPI)
endif()
if(BUILD_LINUX)
	set(LIVE True)
	add_compile_definitions(LINUX)
elseif(BUILD_ESP8266)
	set(LIVE False)
	add_compile_definitions(ESP8266)
endif()

if(LIVE)
	add_compile_definitions(LIVE)
endif()

if(LITTLE_ENDIAN)
	add_compile_definitions(LITTLE_ENDIAN)
elseif(BIG_ENDIAN)
	add_compile_definitions(BIG_ENDIAN)
endif()

if(DEBUG)
	add_compile_definitions(DEBUG)
elseif(RELEASE)
	add_compile_definitions(RELEASE)
else()
	message(FATAL_ERROR "Kein Modus angegeben.")
endif()

add_compile_definitions(BOOST_BIND_NO_PLACEHOLDERS)

file(GLOB SRC     src/sync/*.cpp)
file(GLOB STRUCTS "C:/Users/User/source/repos/Kameraerweiterung Neu/DataStructures/*.cpp")
file(GLOB HEADERS src/sync/*.h)

add_executable(lib src/main.cpp ${SRC} ${STRUCTS} ${HEADERS})

target_include_directories(lib PUBLIC "src/sync")
target_include_directories(lib PUBLIC "C:/Users/User/source/repos/Kameraerweiterung Neu/DataStructures")
if(BUILD_WINDOWS)
	target_include_directories(lib PUBLIC "lib/windows/boost_1_76_0")
	target_link_directories(lib PUBLIC "lib/windows/boost_1_76_0/stage/lib")
	target_link_libraries(lib shlwapi.lib Iphlpapi.dll)
elseif(BUILD_LINUX)
	find_package(Threads REQUIRED)
	target_link_libraries(lib PRIVATE Threads::Threads)
	target_include_directories(lib PUBLIC "lib/linux/boost_1_76_0")
	target_link_directories(lib PUBLIC "lib/linux/boost_1_76_0/stage/lib")
elseif(BUILD_RPI)
	target_include_directories(lib PUBLIC "lib/rpi/boost_1_76_0")
	target_link_directories(lib PUBLIC "lib/rpi/boost_1_76_0/stage/lib")
endif()
